#include <stdio.h>
#include "stats.h" /* Size of the Data Set */
#define SIZE (40)
void main()  
{
int main() 
{
  unsigned char test[SIZE] = { 34, 201, 190, 154,   8, 194,   2,   6,
                              114, 88,   45,  76, 123,  87,  25,  23,
@@ -37,54 +48,141 @@ void main() 
{
 
  printf("******** Array ***********\n");                                
  print_array(test ,SIZE );

}
  
  unsigned char minimum = find_minimum(test ,SIZE );
  printf("%u is the minimum value in data array\n",minimum );

 
  unsigned char maximum = find_maximum(test ,SIZE );
  printf("%u is the maximum value in data array\n",maximum );



  
  unsigned char mean = find_mean(test ,SIZE );
  printf("%u is the mean in data array\n",mean );

   
  unsigned char median = find_median(test ,SIZE );
  printf("%u is the median in data array\n",median );


  // Declaring sortedData and print it.
  printf("******* Sorted Array *********\n");
  sort_array(test ,SIZE );
  print_array(test , SIZE );

  return 0;

}
/*
/* Add other Implementation File Code Here */


void print_array( unsigned char * data , int dataLength )
{
	/*
		Implementation
	*/

	for (int i = 0; i < dataLength; ++i)
	{
		printf("%u\n",data[i] );
	}
}


int find_median( unsigned char * sortedData , int dataLength )
unsigned char find_median( unsigned char * data , int dataLength )
{

	/*
		Implementation
	*/
	//For finding median, array must be sorted
	sort_array(data, dataLength);
	unsigned char median;

	int middleData = dataLength / 2 ;
	//Length of array is even ,then we have to mean of middle items.
	if( 0 == dataLength % 2 )
	{
		median = (data[middleData - 1 ] + data[middleData ] ) / 2 ;	
	}
	//Length of array is odd ,then we choose on the middle item. 
	else
	{
		median = data[middleData];
	}
	return median;
}


int find_mean( unsigned char * data , int dataLength )
unsigned char find_mean( unsigned char * data , int dataLength )
{
	/*
		Implementation
	*/
	int sum = 0;
	for (int i = 0; i < dataLength; ++i)
	{
		sum += data[i];
	}
	return ( sum / dataLength);
}


int find_maximum( unsigned char * data , int dataLength )
unsigned find_maximum( unsigned char * data , int dataLength )
{
	/*
		Implementation
	*/
	unsigned char maximum = data[0];

	for (int i = 1; i < dataLength; ++i)
	{
		if (maximum < data[i])
		{
			maximum = data[i];
		}
	}
	return maximum;
}

int find_minimum( unsigned char * data , int dataLength )
unsigned char find_minimum( unsigned char * data , int dataLength )
{
	/*
		Implementation
	*/
	unsigned char minimum = data[0];

	for (int i = 1; i < dataLength; ++i)
	{
		if (minimum > data[i])
		{
			minimum = data[i];
		}
	}
	return minimum;

}

void swap( unsigned char * firstItem , unsigned char * secondItem )
{
	unsigned char temp = *firstItem;
	*firstItem = *secondItem;
	*secondItem = temp;
}

unsigned char * sort_array( unsigned char * data , int dataLength 
void sort_array( unsigned char * data , int dataLength )
{
	/*
		Implementation
	*/
   int i, j; 
   int flag; 
   for (i = 0; i < dataLength-1; i++) 
   { 
     flag = 0; 
     for (j = 0; j < dataLength-i-1; j++) 
     { 
        if (data[j] < data[j+1]) 
        { 
           swap(&data[j], &data[j+1]); 
           flag = 1; 
        } 
     } 
     if (flag == 0) 
        break; 
   } 
}
27  stats.h 
@@ -42,7 +42,7 @@ void print_array( unsigned char * data , int dataLength );
int find_median( unsigned char * sortedData , int dataLength );
unsigned char find_median( unsigned char * sortedData , int dataLength );
@@ -61,7 +61,7 @@ int find_median( unsigned char * sortedData , int dataLength );
int find_mean( unsigned char * data , int dataLength );
unsigned char find_mean( unsigned char * data , int dataLength );
@@ -78,7 +78,7 @@ int find_mean( unsigned char * data , int dataLength );
int find_maximum( unsigned char * data , int dataLength );
unsigned find_maximum( unsigned char * data , int dataLength );
@@ -94,7 +94,7 @@ int find_maximum( unsigned char * data , int dataLength );
int find_minimum( unsigned char * data , int dataLength );
unsigned char find_minimum( unsigned char * data , int dataLength );
@@ -109,7 +109,7 @@ int find_minimum( unsigned char * data , int dataLength );
unsigned char * sort_array( unsigned char * data , int dataLength );
void sort_array( unsigned char * data , int dataLength );
@@ -123,4 +123,21 @@ unsigned char * sort_array( unsigned char * data , int dataLength );
void swap( unsigned char * firstItem , unsigned char * secondItem );
#endif  